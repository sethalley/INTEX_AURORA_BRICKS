@{
    ViewData["Title"] = "Home Page";
}
@model INTEX_AURORA_BRICKS.Models.IndexViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Customers> SignInManager
@inject UserManager<Customers> UserManager
@using System.Security.Claims

<br />
<br />
<!-- ***** Main Banner Area Start ***** -->
<div class="main-banner">
    <div class="counter-content" style="font-size: 30px; color: #444; height: 75px;" onclick="redirectToProductsPage()">
        Daily Deal: <span id="countdown" style="font-size: 24px; color: #444; cursor:pointer;"></span>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="main-content">
                    <div class="next-show">
                        <i class="fa fa-arrow-up"></i>
                        <span>Limited Time Offer</span>
                    </div>
                    <h6>Presenting</h6>
                    <h2>Aurora Brickwell Creations</h2>
                    <div class="main-white-button">
                        <a href="@Url.Action("Products", "Home")">Browse Now</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    // Function to update the countdown
    function updateCountdown() {
        // Set the end time 2 hours from now
        var endTime = new Date();
        endTime.setHours(endTime.getHours() + 2);

        var countdownElement = document.getElementById('countdown');

        // Update the countdown every second
        var countdownInterval = setInterval(function () {
            var now = new Date();
            var timeDifference = endTime - now;

            // If the countdown is over, display 00:00:00 and clear the interval
            if (timeDifference <= 0) {
                countdownElement.textContent = '00:00:00';
                clearInterval(countdownInterval);
                return;
            }

            // Calculate hours, minutes, and seconds
            var hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);

            // Format the countdown string as HH:MM:SS
            var countdownString = ('0' + hours).slice(-2) + ':' + ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2);

            // Update the countdown element
            countdownElement.textContent = countdownString;
        }, 1000); // Update every second
    }

    // Call the function when the page loads
    window.onload = function () {
        updateCountdown();
    };

    // Function to redirect to the products page
    function redirectToProductsPage() {
        window.location.href = '@Url.Action("Products", "Home")';
    }
</script>
<!-- ***** Main Banner Area End ***** -->
<!-- *** Owl Carousel Items ***-->
<div class="show-events-carousel">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="owl-show-events owl-carousel">
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-01.jpg" alt="" style="height: 200px;"></a>
                    </div>
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-02.jpg" alt="" style="height: 200px;"></a>
                    </div>
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-03.jpg" alt="" style="height: 200px;"></a>
                    </div>
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-04.jpg" alt="" style="height: 200px;"></a>
                    </div>
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-01.jpg" alt="" style="height: 200px;"></a>
                    </div>
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-02.jpg" alt="" style="height: 200px;"></a>
                    </div>
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-03.jpg" alt="" style="height: 200px;"></a>
                    </div>
                    <div class="item">
                        <a href="event-details.html"><img src="assets/images/show-events-04.jpg" alt="" style="height: 200px;"></a>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


<!-- *** Amazing Venus ***-->
<div class="amazing-venues">
    <div class="container">
        <div class="row">
            <div class="col-lg-9">
                <div class="left-content">
                    <h4>Discover the Magic of Lego™ with Aurora</h4>
                    <p>
                        Aurora Brickwell is thrilled to open the doors of her virtual storefront and share her passion for Lego™ with the world. Each design is a labor of love, crafted with meticulous attention to detail and a boundless imagination. With her web app-based platform, Aurora invites you to experience the joy and wonder of her creations firsthand. Get ready to be inspired, delighted, and captivated by the magic of Lego™ as you explore Aurora's unique designs. Join her on this exciting adventure and let your imagination soar.
                    </p>
                    <br />
                    <p>
                        You can experience the imagination and creativity with Aurora Brickwell's curated collection of Lego™ sets and exclusive designs. From beloved classics to awe-inspiring creations, each product tells a story and invites you to be a part of the adventure. Whether you're a seasoned collector or a budding enthusiast, there's something for everyone in Aurora's virtual storefront. Explore, shop, and embark on your own Lego™ journey today.
                    </p>
                    <br>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="right-content">
                    <h5><i class="fa fa-map-marker"></i> Free Shipping</h5>
                    <span>As a registered user <br>you show your support,<br>and you enjoy free shipping on your first order from Aurora!</span>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- *** Map ***-->
<div class="map-image">
    <img src="assets/images/about-map-image.jpg" alt="Maps of 3 Venues">
</div>


@if (SignInManager.IsSignedIn(User))
{
    var userIdClaim = User.FindFirst(ClaimTypes.NameIdentifier);
    if (userIdClaim != null)
    {
        <h1>Selected for you...</h1>
        <br />

        var recommendation = Model.UserRecommendations.FirstOrDefault(r => r.customer_ID == Model.RecId);
        List<int> tailored = new List<int>() { recommendation.Recommendation_1_ID, recommendation.Recommendation_2_ID, recommendation.Recommendation_3_ID, recommendation.Recommendation_4_ID, recommendation.Recommendation_5_ID };
        <div>
            <div class="row horizontal-scroll">
                @foreach (var product in Model.Products)
                {
                    if (tailored.Contains(product.product_ID))
                    {
                        <div class="col-lg-4">
                            <div class="event-item">
                                <div class="thumb">
                                    <a href="@Url.Action("Details", "Home", new { id = product.product_ID })"><img src="@product.img_link" alt=""></a>
                                </div>
                                <div class="down-content">
                                    <a href="event-details.html"><h4>@product.name</h4></a>
                                    <ul>
                                        <li>Piece Count: @product.num_parts</li>
                                        <li>Color: @product.primary_color</li>
                                        <li><a href="@Url.Action("Details", "Home", new { id = product.product_ID })">View Item</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    }
}

else
{
    <h1>Most popular...</h1>
    <br />
    <div class="container">
        <!-- Add a new class 'horizontal-scroll' to the row -->
        <div class="row horizontal-scroll">
            @{
                List<int> best = new List<int>() { 27, 33, 34, 37 };
                if (Model != null)
                {
                    foreach (var product in Model.Products)
                    {
                        if (best.Contains(product.product_ID))
                        {
                            <div class="col-lg-4">
                                <div class="event-item">
                                    <div class="thumb">
                                        <a href=" @Url.Action("Details", "Home", new { id = product.product_ID })"><img src="@product.img_link" alt=""></a>
                                    </div>
                                    <div class="down-content">
                                        <a href="event-details.html"><h4>@product.name</h4></a>
                                        <ul>
                                            <li>Piece Count: @product.num_parts</li>
                                            <li>Color: @product.primary_color</li>
                                            <li><a href=" @Url.Action("Details", "Home", new { id = product.product_ID })">View Item</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
                else
                {
                    // Handle scenario where Model is null
                    <p>No products available.</p>
                }
            }
        </div>
    </div>

}


<style>
    .horizontal-scroll {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch; /* Smooth scrolling on touch devices */
    }

    .horizontal-scroll .col-lg-4 {
        flex: 0 0 auto; /* Prevent flex items from growing or shrinking */
    }


</style>
